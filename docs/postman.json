{
	"info": {
		"_postman_id": "1a48569d-dc44-45d4-9ed5-6de8c70fd725",
		"name": "todo manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "todo list",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    createTodoList(\n        data: {\n            title: \"Tasks\"\n            owner_Id: 1\n    }) {\n        id\n        title\n        owner_Id\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    todoList (where: {id: 1}) {\n        id\n        title\n            owner_Id: 1\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateTodoList (\n        id: 1\n        data: {\n            title: \"Tasks2\"\n            owner_Id: 1\n        }\n    ) {\n        id\n        title\n        owner_id\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    deleteBook (id: 2)\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    todoLists  {\n            id\n            title\n            owner_id\n            createdAt\n            updatedAt\n        }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    countTodoLists\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "todo list item",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    createTodoListItem(\n        data: {\n            text: \"Task1\"\n            todo_list_id: 1\n    }) {\n        id\n        text\n        todo_list_id\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    todoListItem (where: {id: 1}) {\n        id\n        text\n        todo_list_id\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateTodoListItem (\n        id: 1\n        data: {\n            text: \"Task2\"\n            todo_list_id: 1\n        }\n    ) {\n        id\n        text\n       todo_list_id\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    deleteTodoListItem (id: 2)\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    todoListItems  {\n            id\n            text\n            todo_list_id\n             createdAt\n            updatedAt\n        }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    countTodoListItems\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    createUser(\n        data: {\n            firstNamr: \"Ivan\"\n            lastNamr: \"Ivanov\"\n    }) {\n        id\n        firstNamr\n        lastNamr\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    user (where: {id: 1}) {\n        id\n        firstNamr\n        lastNamr\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateUser (\n        id: 1\n        data: {\n            firstNamr: \"Ivan\"\n            lastNamr: \"Ivanov\"\n        }\n    ) {\n        id\n        firstNamr\n       lastNamr\n        createdAt\n        updatedAt\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    deleteUser (id: 2)\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    users  {\n            id\n            firstNamr\n            lastNamr\n            createdAt\n            updatedAt\n        }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    countUsers\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{server}}/graphql",
							"host": [
								"{{server}}"
							],
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}