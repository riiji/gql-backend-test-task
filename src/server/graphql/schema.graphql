type Query {
  check: Boolean!

  # todoList
  countTodoLists(where: TodoListWhereInput): Int!
  todoList(where: TodoListWhereInput!): TodoList!
  todoLists(where: TodoListWhereInput, skip: Int, limit: Int): [TodoList]!

  # todoListsItems
  countTodoListItems(where: TodoListItemWhereInput): Int!
  todoListItem(where: TodoListItemWhereInput!): TodoListItem!
  todoListItems(where: TodoListItemWhereInput, skip: Int, limit: Int): [TodoListItem]!

  # user
  countUsers(where: UserWhereInput): Int!
  user(where: UserWhereInput!): User!
  users(where: UserWhereInput, skip: Int, limit: Int): [User]!

}

type Mutation {
  # todoList
  createTodoList(data: TodoListCreateInput!): TodoList!
  updateTodoList(id: Int!, data: TodoListUpdateInput!): TodoList!
  deleteTodoList(id: Int!): Boolean!

  # todoListItem
  createTodoListItem(data: TodoListItemCreateInput!): TodoListItem!
  updateTodoListItem(id: Int!, data: TodoListItemUpdateInput!): TodoListItem!
  deleteTodoListItem(id: Int!): Boolean!

  # user
  createUser(data: UserCreateInput!): User!
  updateUser(id: Int!, data: UserUpdateInput!): User!
  deleteUser(id: Int!): Boolean!
}
